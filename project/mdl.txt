nn.Sequential {
  [input -> (1) -> (2) -> (3) -> output]
  (1): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> output]
    (1): nn.SpatialConvolutionMM
    (2): nn.Threshold
    (3): nn.SpatialMaxPooling
    (4): nn.SpatialConvolutionMM
    (5): nn.Threshold
    (6): nn.SpatialMaxPooling
    (7): nn.SpatialConvolutionMM
    (8): nn.Threshold
    (9): nn.SpatialMaxPooling
    (10): nn.View
  }
  (2): nn.Concat {
    input
      |`-> (1): nn.Sequential {
      |      [input -> (1) -> (2) -> (3) -> output]
      |      (1): nn.Linear(25088 -> 512)
      |      (2): nn.Threshold
      |      (3): nn.Linear(512 -> 10)
      |    }
      |`-> (2): nn.Sequential {
      |      [input -> (1) -> (2) -> (3) -> output]
      |      (1): nn.Linear(25088 -> 512)
      |      (2): nn.Threshold
      |      (3): nn.Linear(512 -> 4)
      |    }
      |`-> (3): nn.Sequential {
      |      [input -> (1) -> (2) -> (3) -> output]
      |      (1): nn.Linear(25088 -> 512)
      |      (2): nn.Threshold
      |      (3): nn.Linear(512 -> 2)
      |    }
      |`-> (4): nn.Sequential {
      |      [input -> (1) -> (2) -> (3) -> (4) -> output]
      |      (1): nn.Linear(25088 -> 512)
      |      (2): nn.Threshold
      |      (3): nn.Linear(512 -> 256)
      |      (4): nn.Concat {
      |        input
      |          |`-> (1): nn.Sequential {
      |          |      [input -> (1) -> (2) -> output]
      |          |      (1): nn.Threshold
      |          |      (2): nn.Linear(256 -> 9)
      |          |    }
      |          |`-> (2): nn.Sequential {
      |          |      [input -> (1) -> (2) -> output]
      |          |      (1): nn.Threshold
      |          |      (2): nn.Linear(256 -> 10)
      |          |    }
      |          |`-> (3): nn.Sequential {
      |          |      [input -> (1) -> (2) -> output]
      |          |      (1): nn.Threshold
      |          |      (2): nn.Linear(256 -> 21)
      |          |    }
      |          |`-> (4): nn.Sequential {
      |          |      [input -> (1) -> (2) -> output]
      |          |      (1): nn.Threshold
      |          |      (2): nn.Linear(256 -> 4)
      |          |    }
      |          |`-> (5): nn.Sequential {
      |          |      [input -> (1) -> (2) -> output]
      |          |      (1): nn.Threshold
      |          |      (2): nn.Linear(256 -> 2)
      |          |    }
      |           ... -> output
      |      }
      |    }
      |`-> (5): nn.Sequential {
      |      [input -> (1) -> (2) -> (3) -> output]
      |      (1): nn.Linear(25088 -> 512)
      |      (2): nn.Threshold
      |      (3): nn.Linear(512 -> 6)
      |    }
      |`-> (6): nn.Sequential {
      |      [input -> (1) -> (2) -> (3) -> (4) -> output]
      |      (1): nn.Linear(25088 -> 512)
      |      (2): nn.Threshold
      |      (3): nn.Linear(512 -> 256)
      |      (4): nn.Concat {
      |        input
      |          |`-> (1): nn.Sequential {
      |          |      [input -> (1) -> (2) -> output]
      |          |      (1): nn.Threshold
      |          |      (2): nn.Linear(256 -> 13)
      |          |    }
      |          |`-> (2): nn.Sequential {
      |          |      [input -> (1) -> (2) -> output]
      |          |      (1): nn.Threshold
      |          |      (2): nn.Linear(256 -> 7)
      |          |    }
      |          |`-> (3): nn.Sequential {
      |          |      [input -> (1) -> (2) -> output]
      |          |      (1): nn.Threshold
      |          |      (2): nn.Linear(256 -> 3)
      |          |    }
      |           ... -> output
      |      }
      |    }
      |`-> (7): nn.Sequential {
      |      [input -> (1) -> (2) -> (3) -> output]
      |      (1): nn.Linear(25088 -> 512)
      |      (2): nn.Threshold
      |      (3): nn.Linear(512 -> 3)
      |    }
      |`-> (8): nn.Sequential {
      |      [input -> (1) -> (2) -> (3) -> output]
      |      (1): nn.Linear(25088 -> 512)
      |      (2): nn.Threshold
      |      (3): nn.Linear(512 -> 4)
      |    }
      |`-> (9): nn.Sequential {
      |      [input -> (1) -> (2) -> (3) -> (4) -> output]
      |      (1): nn.Linear(25088 -> 512)
      |      (2): nn.Threshold
      |      (3): nn.Linear(512 -> 256)
      |      (4): nn.Concat {
      |        input
      |          |`-> (1): nn.Sequential {
      |          |      [input -> (1) -> (2) -> output]
      |          |      (1): nn.Threshold
      |          |      (2): nn.Linear(256 -> 8)
      |          |    }
      |          |`-> (2): nn.Sequential {
      |          |      [input -> (1) -> (2) -> output]
      |          |      (1): nn.Threshold
      |          |      (2): nn.Linear(256 -> 4)
      |          |    }
      |           ... -> output
      |      }
      |    }
      |`-> (10): nn.Sequential {
      |      [input -> (1) -> (2) -> (3) -> output]
      |      (1): nn.Linear(25088 -> 512)
      |      (2): nn.Threshold
      |      (3): nn.Linear(512 -> 4)
      |    }
      |`-> (11): nn.Sequential {
      |      [input -> (1) -> (2) -> (3) -> output]
      |      (1): nn.Linear(25088 -> 512)
      |      (2): nn.Threshold
      |      (3): nn.Linear(512 -> 2)
      |    }
      |`-> (12): nn.Sequential {
      |      [input -> (1) -> (2) -> (3) -> output]
      |      (1): nn.Linear(25088 -> 512)
      |      (2): nn.Threshold
      |      (3): nn.Linear(512 -> 5)
      |    }
       ... -> output
  }
  (3): nn.LogSoftMax
}

