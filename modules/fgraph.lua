require 'nn'
-- nInEls number of elements per input frame -> l^2
-- aim for 8x8 input -> 1024 size fc layer for 256 output frames
function fgraph(nInputPlanes,nOutputPlanes,nInEls,p) 
	dropout_p = p
	featuresOut = nOutputPlanes*nInEls/16
	hiddenNodes = {featuresOut}
	-- 1-10
	protists = nn.Sequential()
	protists:add(nn.SpatialConvolution(nInputPlanes,nOutputPlanes,3,3,1,1,1,1))
	protists:add(nn.ReLU())
	protists:add(nn.SpatialMaxPooling(2,2))
	protists:add(nn.SpatialConvolution(nOutputPlanes,nOutputPlanes,3,3,1,1,1,1))
	protists:add(nn.ReLU())
	protists:add(nn.SpatialMaxPooling(2,2))
	protists:add(nn.View(featuresOut))
	protists:add(nn.Dropout(dropout_p))
	protists:add(nn.Linear(featuresOut,hiddenNodes[1]))
	protists:add(nn.Dropout(dropout_p))
	protists:add(nn.ReLU())
	protists:add(nn.Linear(hiddenNodes[1],10))

	-- 11-14
	trichodesmium = nn.Sequential()
	trichodesmium:add(nn.SpatialConvolution(nInputPlanes,nOutputPlanes,3,3,1,1,1,1))
	trichodesmium:add(nn.SpatialMaxPooling(2,2))
	trichodesmium:add(nn.ReLU())
	trichodesmium:add(nn.SpatialConvolution(nOutputPlanes,nOutputPlanes,3,3,1,1,1,1))
	trichodesmium:add(nn.ReLU())
	trichodesmium:add(nn.SpatialMaxPooling(2,2))
	trichodesmium:add(nn.View(featuresOut))
	trichodesmium:add(nn.Dropout(dropout_p))
	trichodesmium:add(nn.Linear(featuresOut,hiddenNodes[1]))
	trichodesmium:add(nn.Dropout(dropout_p))
	trichodesmium:add(nn.ReLU())
	trichodesmium:add(nn.Linear(hiddenNodes[1],4))

	-- 15-16
	diatoms = nn.Sequential()
	diatoms:add(nn.SpatialConvolution(nInputPlanes,nOutputPlanes,3,3,1,1,1,1))
	diatoms:add(nn.ReLU())
	diatoms:add(nn.SpatialMaxPooling(2,2))
	diatoms:add(nn.SpatialConvolution(nOutputPlanes,nOutputPlanes,3,3,1,1,1,1))
	diatoms:add(nn.ReLU())
	diatoms:add(nn.SpatialMaxPooling(2,2))
	diatoms:add(nn.View(featuresOut))
	diatoms:add(nn.Dropout(dropout_p))
	diatoms:add(nn.Linear(featuresOut,hiddenNodes[1]))
	diatoms:add(nn.Dropout(dropout_p))
	diatoms:add(nn.ReLU())
	diatoms:add(nn.Linear(hiddenNodes[1],2))

	-- 17-62
	gelatZoo ={}
	gelatZoo[1] = nn.Sequential()
	gelatZoo[1]:add(nn.SpatialConvolution(nInputPlanes,nOutputPlanes,3,3,1,1,1,1))
	gelatZoo[1]:add(nn.ReLU())
	gelatZoo[1]:add(nn.SpatialMaxPooling(2,2))

	--17-25
	pelagicTunicate = nn.Sequential()
	pelagicTunicate:add(nn.SpatialConvolution(nOutputPlanes,nOutputPlanes,3,3,1,1,1,1))
	pelagicTunicate:add(nn.ReLU())
	pelagicTunicate:add(nn.SpatialMaxPooling(2,2))
	pelagicTunicate:add(nn.View(featuresOut))
	pelagicTunicate:add(nn.Dropout(dropout_p))
	pelagicTunicate:add(nn.Linear(featuresOut,hiddenNodes[1]))
	pelagicTunicate:add(nn.ReLU())
	pelagicTunicate:add(nn.Linear(hiddenNodes[1],9))

	--26-35
	siphonophore = nn.Sequential()
	siphonophore:add(nn.SpatialConvolution(nOutputPlanes,nOutputPlanes,3,3,1,1,1,1))
	siphonophore:add(nn.ReLU())
	siphonophore:add(nn.SpatialMaxPooling(2,2))
	siphonophore:add(nn.View(featuresOut))
	siphonophore:add(nn.Dropout(dropout_p))
	siphonophore:add(nn.Linear(featuresOut,hiddenNodes[1]))
	siphonophore:add(nn.Dropout(dropout_p))
	siphonophore:add(nn.ReLU())
	siphonophore:add(nn.Linear(hiddenNodes[1],10))

	--36-56
	hydromedusae = nn.Sequential()
	hydromedusae:add(nn.SpatialConvolution(nOutputPlanes,nOutputPlanes,3,3,1,1,1,1))
	hydromedusae:add(nn.ReLU())
	hydromedusae:add(nn.SpatialMaxPooling(2,2))
	hydromedusae:add(nn.View(featuresOut))
	hydromedusae:add(nn.Dropout(dropout_p))
	hydromedusae:add(nn.Linear(featuresOut,hiddenNodes[1]))
	hydromedusae:add(nn.Dropout(dropout_p))
	hydromedusae:add(nn.ReLU())
	hydromedusae:add(nn.Linear(hiddenNodes[1],21))

	--57-60
	ctenophore = nn.Sequential()
	ctenophore:add(nn.SpatialConvolution(nOutputPlanes,nOutputPlanes,3,3,1,1,1,1))
	ctenophore:add(nn.ReLU())
	ctenophore:add(nn.SpatialMaxPooling(2,2))
	ctenophore:add(nn.View(featuresOut))
	ctenophore:add(nn.Dropout(dropout_p))
	ctenophore:add(nn.Linear(featuresOut,hiddenNodes[1]))
	ctenophore:add(nn.Dropout(dropout_p))
	ctenophore:add(nn.ReLU())
	ctenophore:add(nn.Linear(hiddenNodes[1],4))

	--61-62
	otherGelatZoo = nn.Sequential()
	otherGelatZoo:add(nn.SpatialConvolution(nOutputPlanes,nOutputPlanes,3,3,1,1,1,1))
	otherGelatZoo:add(nn.ReLU())
	otherGelatZoo:add(nn.SpatialMaxPooling(2,2))
	otherGelatZoo:add(nn.View(featuresOut))
	otherGelatZoo:add(nn.Dropout(dropout_p))
	otherGelatZoo:add(nn.Linear(featuresOut,hiddenNodes[1]))
	otherGelatZoo:add(nn.Dropout(dropout_p))
	otherGelatZoo:add(nn.ReLU())
	otherGelatZoo:add(nn.Linear(hiddenNodes[1],2))

	gelatZoo[2] = nn.Concat(2)
	gelatZoo[2]:add(pelagicTunicate)
	gelatZoo[2]:add(siphonophore)
	gelatZoo[2]:add(hydromedusae)
	gelatZoo[2]:add(ctenophore)
	gelatZoo[2]:add(otherGelatZoo)

	gelatZoo[1]:add(gelatZoo[2])

	--63-68
	fish = nn.Sequential()
	fish:add(nn.SpatialConvolution(nInputPlanes,nOutputPlanes,3,3,1,1,1,1))
	fish:add(nn.ReLU())
	fish:add(nn.SpatialMaxPooling(2,2))
	fish:add(nn.SpatialConvolution(nOutputPlanes,nOutputPlanes,3,3,1,1,1,1))
	fish:add(nn.ReLU())
	fish:add(nn.SpatialMaxPooling(2,2))
	fish:add(nn.View(featuresOut))
	fish:add(nn.Dropout(dropout_p))
	fish:add(nn.Linear(featuresOut,hiddenNodes[1]))
	fish:add(nn.Dropout(dropout_p))
	fish:add(nn.ReLU())
	fish:add(nn.Linear(hiddenNodes[1],6))

	--69-91
	crustaceans = {}
	crustaceans[1] = nn.Sequential()
	crustaceans[1]:add(nn.SpatialConvolution(nInputPlanes,nOutputPlanes,3,3,1,1,1,1))
	crustaceans[1]:add(nn.ReLU())
	crustaceans[1]:add(nn.SpatialMaxPooling(2,2))

	--69-81
	copepods = nn.Sequential()
	copepods:add(nn.SpatialConvolution(nOutputPlanes,nOutputPlanes,3,3,1,1,1,1))
	copepods:add(nn.ReLU())
	copepods:add(nn.SpatialMaxPooling(2,2))
	copepods:add(nn.View(featuresOut))
	copepods:add(nn.Dropout(dropout_p))
	copepods:add(nn.Linear(featuresOut,hiddenNodes[1]))
	copepods:add(nn.Dropout(dropout_p))
	copepods:add(nn.ReLU())
	copepods:add(nn.Linear(hiddenNodes[1],13))

	--82-88
	shrimpLike = nn.Sequential()
	shrimpLike:add(nn.SpatialConvolution(nOutputPlanes,nOutputPlanes,3,3,1,1,1,1))
	shrimpLike:add(nn.ReLU())
	shrimpLike:add(nn.SpatialMaxPooling(2,2))
	shrimpLike:add(nn.View(featuresOut))
	shrimpLike:add(nn.Dropout(dropout_p))
	shrimpLike:add(nn.Linear(featuresOut,hiddenNodes[1]))
	shrimpLike:add(nn.Dropout(dropout_p))
	shrimpLike:add(nn.ReLU())
	shrimpLike:add(nn.Linear(hiddenNodes[1],7))

	--89-91
	otherCrust = nn.Sequential()
	otherCrust:add(nn.SpatialConvolution(nOutputPlanes,nOutputPlanes,3,3,1,1,1,1))
	otherCrust:add(nn.ReLU())
	otherCrust:add(nn.SpatialMaxPooling(2,2))
	otherCrust:add(nn.View(featuresOut))
	otherCrust:add(nn.Dropout(dropout_p))
	otherCrust:add(nn.Linear(featuresOut,hiddenNodes[1]))
	otherCrust:add(nn.Dropout(dropout_p))
	otherCrust:add(nn.ReLU())
	otherCrust:add(nn.Linear(hiddenNodes[1],3))

	crustaceans[2] = nn.Concat(2)
	crustaceans[2]:add(copepods)
	crustaceans[2]:add(shrimpLike)
	crustaceans[2]:add(otherCrust)

	crustaceans[1]:add(crustaceans[2])
	
	--92-94
	chaetognath = nn.Sequential()
	chaetognath:add(nn.SpatialConvolution(nInputPlanes,nOutputPlanes,3,3,1,1,1,1))
	chaetognath:add(nn.ReLU())
	chaetognath:add(nn.SpatialMaxPooling(2,2))
	chaetognath:add(nn.SpatialConvolution(nOutputPlanes,nOutputPlanes,3,3,1,1,1,1))
	chaetognath:add(nn.ReLU())
	chaetognath:add(nn.SpatialMaxPooling(2,2))
	chaetognath:add(nn.View(featuresOut))
	chaetognath:add(nn.Dropout(dropout_p))
	chaetognath:add(nn.Linear(featuresOut,hiddenNodes[1]))
	chaetognath:add(nn.Dropout(dropout_p))
	chaetognath:add(nn.ReLU())
	chaetognath:add(nn.Linear(hiddenNodes[1],3))

	--95-98
	gastropod = nn.Sequential()
	gastropod:add(nn.SpatialConvolution(nInputPlanes,nOutputPlanes,3,3,1,1,1,1))
	gastropod:add(nn.ReLU())
	gastropod:add(nn.SpatialMaxPooling(2,2))
	gastropod:add(nn.SpatialConvolution(nOutputPlanes,nOutputPlanes,3,3,1,1,1,1))
	gastropod:add(nn.ReLU())
	gastropod:add(nn.SpatialMaxPooling(2,2))
	gastropod:add(nn.View(featuresOut))
	gastropod:add(nn.Dropout(dropout_p))
	gastropod:add(nn.Linear(featuresOut,hiddenNodes[1]))
	gastropod:add(nn.Dropout(dropout_p))
	gastropod:add(nn.ReLU())
	gastropod:add(nn.Linear(hiddenNodes[1],4))

	--99-110
	otherInvertLarvae = {}
	otherInvertLarvae[1] = nn.Sequential()
	otherInvertLarvae[1]:add(nn.SpatialConvolution(nInputPlanes,nOutputPlanes,3,3,1,1,1,1))
	otherInvertLarvae[1]:add(nn.ReLU())
	otherInvertLarvae[1]:add(nn.SpatialMaxPooling(2,2))

	--99-106
	echinoderms = nn.Sequential()
	echinoderms:add(nn.SpatialConvolution(nOutputPlanes,nOutputPlanes,3,3,1,1,1,1))
	echinoderms:add(nn.ReLU())
	echinoderms:add(nn.SpatialMaxPooling(2,2))
	echinoderms:add(nn.View(featuresOut))
	echinoderms:add(nn.Dropout(dropout_p))
	echinoderms:add(nn.Linear(featuresOut,hiddenNodes[1]))
	echinoderms:add(nn.Dropout(dropout_p))
	echinoderms:add(nn.ReLU())
	echinoderms:add(nn.Linear(hiddenNodes[1],8))

	otherOtherInvertLarvae = nn.Sequential()
	otherOtherInvertLarvae:add(nn.SpatialConvolution(nOutputPlanes,nOutputPlanes,3,3,1,1,1,1))
	otherOtherInvertLarvae:add(nn.ReLU())
	otherOtherInvertLarvae:add(nn.SpatialMaxPooling(2,2))
	otherOtherInvertLarvae:add(nn.View(featuresOut))
	otherOtherInvertLarvae:add(nn.Dropout(dropout_p))
	otherOtherInvertLarvae:add(nn.Linear(featuresOut,hiddenNodes[1]))
	otherOtherInvertLarvae:add(nn.Dropout(dropout_p))
	otherOtherInvertLarvae:add(nn.ReLU())
	otherOtherInvertLarvae:add(nn.Linear(hiddenNodes[1],4))

	otherInvertLarvae[2] = nn.Concat(2)
	otherInvertLarvae[2]:add(echinoderms)
	otherInvertLarvae[2]:add(otherOtherInvertLarvae)

	otherInvertLarvae[1]:add(otherInvertLarvae[2])

	--111-114
	detritus = nn.Sequential()
	detritus:add(nn.SpatialConvolution(nInputPlanes,nOutputPlanes,3,3,1,1,1,1))
	detritus:add(nn.ReLU())
	detritus:add(nn.SpatialMaxPooling(2,2))
	detritus:add(nn.SpatialConvolution(nOutputPlanes,nOutputPlanes,3,3,1,1,1,1))
	detritus:add(nn.ReLU())
	detritus:add(nn.SpatialMaxPooling(2,2))
	detritus:add(nn.View(featuresOut))
	detritus:add(nn.Dropout(dropout_p))
	detritus:add(nn.Linear(featuresOut,hiddenNodes[1]))
	detritus:add(nn.Dropout(dropout_p))
	detritus:add(nn.ReLU())
	detritus:add(nn.Linear(hiddenNodes[1],4))

	--115-116
	otherPlankton = nn.Sequential()
	otherPlankton:add(nn.SpatialConvolution(nInputPlanes,nOutputPlanes,3,3,1,1,1,1))
	otherPlankton:add(nn.ReLU())
	otherPlankton:add(nn.SpatialMaxPooling(2,2))
	otherPlankton:add(nn.SpatialConvolution(nOutputPlanes,nOutputPlanes,3,3,1,1,1,1))
	otherPlankton:add(nn.ReLU())
	otherPlankton:add(nn.SpatialMaxPooling(2,2))
	otherPlankton:add(nn.View(featuresOut))
	otherPlankton:add(nn.Dropout(dropout_p))
	otherPlankton:add(nn.Linear(featuresOut,hiddenNodes[1]))
	otherPlankton:add(nn.Dropout(dropout_p))
	otherPlankton:add(nn.ReLU())
	otherPlankton:add(nn.Linear(hiddenNodes[1],2))

	--117-121
	unknownOrArtifacts = nn.Sequential()
	unknownOrArtifacts:add(nn.SpatialConvolution(nInputPlanes,nOutputPlanes,3,3,1,1,1,1))
	unknownOrArtifacts:add(nn.ReLU())
	unknownOrArtifacts:add(nn.SpatialMaxPooling(2,2))
	unknownOrArtifacts:add(nn.SpatialConvolution(nOutputPlanes,nOutputPlanes,3,3,1,1,1,1))
	unknownOrArtifacts:add(nn.ReLU())
	unknownOrArtifacts:add(nn.SpatialMaxPooling(2,2))
	unknownOrArtifacts:add(nn.View(featuresOut))
	unknownOrArtifacts:add(nn.Dropout(dropout_p))
	unknownOrArtifacts:add(nn.Linear(featuresOut,hiddenNodes[1]))
	unknownOrArtifacts:add(nn.Dropout(dropout_p))
	unknownOrArtifacts:add(nn.ReLU())
	unknownOrArtifacts:add(nn.Linear(hiddenNodes[1],5))

	graph = nn.Concat(2)
	graph:add(protists)
	graph:add(trichodesmium)
	graph:add(diatoms)
	graph:add(gelatZoo[1])
	graph:add(fish)
	graph:add(crustaceans[1])
	graph:add(chaetognath)
	graph:add(gastropod)
	graph:add(otherInvertLarvae[1])
	graph:add(detritus)
	graph:add(otherPlankton)
	graph:add(unknownOrArtifacts)
	return graph
end

-- mdl = fgraph(3,10,64,0.5)
-- x = mdl:forward(torch.randn(1,3,8,8))
-- print(x:size())